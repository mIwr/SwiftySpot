syntax = "proto3";

import "SPClientInfo.proto";

//Requests
message SPClientTokenRequest {
    ClientTokenRequestType type = 1;
    oneof request {
        SPClientInfo client = 2;
        ChallengeAnswerData answerData = 3;
    }
}

enum ClientTokenRequestType {
    REQUEST_UNKNOWN = 0;
    REQUEST_CLIENT_DATA_REQUEST = 1;
    REQUEST_CHALLENGE_ANSWERS_REQUEST = 2;
}

message ChallengeAnswer {
    ChallengeType type = 1;
    oneof answer {
        ClientSecretHMACAnswer clSecretAnswer = 2;
        EvaluateJSAnswer evaluateJS = 3;
        HashCashAnswer hashcash = 4;
    }
}

enum ChallengeType {
    CHALLENGE_UNKNOWN = 0;
    CHALLENGE_CLIENT_SECRET_HMAC = 1;
    CHALLENGE_EVALUATE_JS = 2;
    CHALLENGE_HASH_CASH = 3;
}

message ClientSecretHMACAnswer {
    string hmac = 1;
}

message EvaluateJSAnswer {
    string result = 1;
}

message HashCashAnswer {
    string suffix = 1;
}

message ChallengeAnswerData {
    string context = 1;//librespot-java: string state = 1;
    repeated ChallengeAnswer answers = 2;
}


//Responses
message SPClientTokenResponse {
    ClientTokenResponseType type = 1;
    oneof response {
        SPClientToken token = 2;
        ChallengesData challenges = 3;
    }
}

enum ClientTokenResponseType {
    RESPONSE_UNKNOWN = 0;
    RESPONSE_GRANTED_TOKEN_RESPONSE = 1;
    RESPONSE_CHALLENGES_RESPONSE = 2;
}

message SPClientToken {
    string val = 1;
    int32 expiresInS = 2;
    int32 refreshAfterS = 3;
    repeated TokenDomain domains = 4;
}

message TokenDomain {
    string domain = 1;
}

message ChallengesData {
    string context = 1;//librespot-java: string state = 1;
    repeated Challenge challenges = 2;
}

message Challenge {
    ChallengeType type = 1;
    oneof parameters {
        ClientSecretParameters clSecretParameters = 2;
        EvaluateJSParameters jsParameters = 3;
        HashCashParameters hashcashParameters = 4;
    }
}

message ClientSecretParameters {
    string salt = 1;
}

message EvaluateJSParameters {
    string code = 1;
    repeated string libraries = 2;
}

message HashCashParameters {
    int32 length = 1;
    string prefix = 2;
}

message SPClientTokenBadRequest {
    string errMsg = 1;
}
