// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: UbiElementInfo.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct Com_Spotify_Ubi_Proto_Elementinfo_V1_UbiElementInfo {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var path: Com_Spotify_Ubi_Proto_Elementinfo_V1_Path {
    get {return _path ?? Com_Spotify_Ubi_Proto_Elementinfo_V1_Path()}
    set {_path = newValue}
  }
  /// Returns true if `path` has been explicitly set.
  var hasPath: Bool {return self._path != nil}
  /// Clears the value of `path`. Subsequent reads from it will return its default value.
  mutating func clearPath() {self._path = nil}

  var impression: Bool = false

  var specID: String = String()

  var specVer: String = String()

  var appID: String = String()

  var generatorVer: String = String()

  var impressionMode: Int32 = 0

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _path: Com_Spotify_Ubi_Proto_Elementinfo_V1_Path? = nil
}

#if swift(>=5.5) && canImport(_Concurrency)
extension Com_Spotify_Ubi_Proto_Elementinfo_V1_UbiElementInfo: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "com.spotify.ubi.proto.elementinfo.v1"

extension Com_Spotify_Ubi_Proto_Elementinfo_V1_UbiElementInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".UbiElementInfo"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "path"),
    2: .same(proto: "impression"),
    3: .standard(proto: "spec_id"),
    4: .standard(proto: "spec_ver"),
    5: .standard(proto: "app_id"),
    6: .standard(proto: "generator_ver"),
    7: .standard(proto: "impression_mode"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._path) }()
      case 2: try { try decoder.decodeSingularBoolField(value: &self.impression) }()
      case 3: try { try decoder.decodeSingularStringField(value: &self.specID) }()
      case 4: try { try decoder.decodeSingularStringField(value: &self.specVer) }()
      case 5: try { try decoder.decodeSingularStringField(value: &self.appID) }()
      case 6: try { try decoder.decodeSingularStringField(value: &self.generatorVer) }()
      case 7: try { try decoder.decodeSingularInt32Field(value: &self.impressionMode) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    try { if let v = self._path {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    } }()
    if self.impression != false {
      try visitor.visitSingularBoolField(value: self.impression, fieldNumber: 2)
    }
    if !self.specID.isEmpty {
      try visitor.visitSingularStringField(value: self.specID, fieldNumber: 3)
    }
    if !self.specVer.isEmpty {
      try visitor.visitSingularStringField(value: self.specVer, fieldNumber: 4)
    }
    if !self.appID.isEmpty {
      try visitor.visitSingularStringField(value: self.appID, fieldNumber: 5)
    }
    if !self.generatorVer.isEmpty {
      try visitor.visitSingularStringField(value: self.generatorVer, fieldNumber: 6)
    }
    if self.impressionMode != 0 {
      try visitor.visitSingularInt32Field(value: self.impressionMode, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: Com_Spotify_Ubi_Proto_Elementinfo_V1_UbiElementInfo, rhs: Com_Spotify_Ubi_Proto_Elementinfo_V1_UbiElementInfo) -> Bool {
    if lhs._path != rhs._path {return false}
    if lhs.impression != rhs.impression {return false}
    if lhs.specID != rhs.specID {return false}
    if lhs.specVer != rhs.specVer {return false}
    if lhs.appID != rhs.appID {return false}
    if lhs.generatorVer != rhs.generatorVer {return false}
    if lhs.impressionMode != rhs.impressionMode {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
