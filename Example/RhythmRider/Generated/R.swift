//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func validate() throws {

  }


  /// This `_R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.localizable` struct is generated, and contains static references to 47 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: This action is irreversible
      ///
      /// Key: alertConfirmSubtitle
      ///
      /// Locales: en, ru
      var alertConfirmSubtitle: RswiftResources.StringResource { .init(key: "alertConfirmSubtitle", tableName: "Localizable", source: source, developmentValue: "This action is irreversible", comment: nil) }

      /// en translation: Are you sure?
      ///
      /// Key: alertConfirmTitle
      ///
      /// Locales: en, ru
      var alertConfirmTitle: RswiftResources.StringResource { .init(key: "alertConfirmTitle", tableName: "Localizable", source: source, developmentValue: "Are you sure?", comment: nil) }

      /// en translation: Empty login
      ///
      /// Key: authLoginEmptyLogin
      ///
      /// Locales: en, ru
      var authLoginEmptyLogin: RswiftResources.StringResource { .init(key: "authLoginEmptyLogin", tableName: "Localizable", source: source, developmentValue: "Empty login", comment: nil) }

      /// en translation: Empty password
      ///
      /// Key: authLoginEmptyPassword
      ///
      /// Locales: en, ru
      var authLoginEmptyPassword: RswiftResources.StringResource { .init(key: "authLoginEmptyPassword", tableName: "Localizable", source: source, developmentValue: "Empty password", comment: nil) }

      /// en translation: Login fail: no authorization token. Check your credentials and repeat
      ///
      /// Key: authLoginNoAuthToken
      ///
      /// Locales: en, ru
      var authLoginNoAuthToken: RswiftResources.StringResource { .init(key: "authLoginNoAuthToken", tableName: "Localizable", source: source, developmentValue: "Login fail: no authorization token. Check your credentials and repeat", comment: nil) }

      /// en translation: Login
      ///
      /// Key: authLoginSignIn
      ///
      /// Locales: en, ru
      var authLoginSignIn: RswiftResources.StringResource { .init(key: "authLoginSignIn", tableName: "Localizable", source: source, developmentValue: "Login", comment: nil) }

      /// en translation: E-mail or username
      ///
      /// Key: authLoginTitle
      ///
      /// Locales: en, ru
      var authLoginTitle: RswiftResources.StringResource { .init(key: "authLoginTitle", tableName: "Localizable", source: source, developmentValue: "E-mail or username", comment: nil) }

      /// en translation: Liked tracks
      ///
      /// Key: favLikedTracks
      ///
      /// Locales: en, ru
      var favLikedTracks: RswiftResources.StringResource { .init(key: "favLikedTracks", tableName: "Localizable", source: source, developmentValue: "Liked tracks", comment: nil) }

      /// en translation: Liked tracks info load fail
      ///
      /// Key: favLikedTracksLoadError
      ///
      /// Locales: en, ru
      var favLikedTracksLoadError: RswiftResources.StringResource { .init(key: "favLikedTracksLoadError", tableName: "Localizable", source: source, developmentValue: "Liked tracks info load fail", comment: nil) }

      /// en translation: Favourite
      ///
      /// Key: favTitle
      ///
      /// Locales: en, ru
      var favTitle: RswiftResources.StringResource { .init(key: "favTitle", tableName: "Localizable", source: source, developmentValue: "Favourite", comment: nil) }

      /// en translation: Playlists
      ///
      /// Key: favUserPlaylists
      ///
      /// Locales: en, ru
      var favUserPlaylists: RswiftResources.StringResource { .init(key: "favUserPlaylists", tableName: "Localizable", source: source, developmentValue: "Playlists", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: generalCancel
      ///
      /// Locales: en, ru
      var generalCancel: RswiftResources.StringResource { .init(key: "generalCancel", tableName: "Localizable", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: Close
      ///
      /// Key: generalClose
      ///
      /// Locales: en, ru
      var generalClose: RswiftResources.StringResource { .init(key: "generalClose", tableName: "Localizable", source: source, developmentValue: "Close", comment: nil) }

      /// en translation: Logout
      ///
      /// Key: generalLogout
      ///
      /// Locales: en, ru
      var generalLogout: RswiftResources.StringResource { .init(key: "generalLogout", tableName: "Localizable", source: source, developmentValue: "Logout", comment: nil) }

      /// en translation: Password
      ///
      /// Key: generalPassword
      ///
      /// Locales: en, ru
      var generalPassword: RswiftResources.StringResource { .init(key: "generalPassword", tableName: "Localizable", source: source, developmentValue: "Password", comment: nil) }

      /// en translation: Profile
      ///
      /// Key: generalProfile
      ///
      /// Locales: en, ru
      var generalProfile: RswiftResources.StringResource { .init(key: "generalProfile", tableName: "Localizable", source: source, developmentValue: "Profile", comment: nil) }

      /// en translation: Refresh
      ///
      /// Key: generalRefresh
      ///
      /// Locales: en, ru
      var generalRefresh: RswiftResources.StringResource { .init(key: "generalRefresh", tableName: "Localizable", source: source, developmentValue: "Refresh", comment: nil) }

      /// en translation: Today
      ///
      /// Key: generalToday
      ///
      /// Locales: en, ru
      var generalToday: RswiftResources.StringResource { .init(key: "generalToday", tableName: "Localizable", source: source, developmentValue: "Today", comment: nil) }

      /// en translation: Tracks
      ///
      /// Key: generalTracks
      ///
      /// Locales: en, ru
      var generalTracks: RswiftResources.StringResource { .init(key: "generalTracks", tableName: "Localizable", source: source, developmentValue: "Tracks", comment: nil) }

      /// en translation: Updated
      ///
      /// Key: generalUpdated
      ///
      /// Locales: en, ru
      var generalUpdated: RswiftResources.StringResource { .init(key: "generalUpdated", tableName: "Localizable", source: source, developmentValue: "Updated", comment: nil) }

      /// en translation: Yesterday
      ///
      /// Key: generalYesterday
      ///
      /// Locales: en, ru
      var generalYesterday: RswiftResources.StringResource { .init(key: "generalYesterday", tableName: "Localizable", source: source, developmentValue: "Yesterday", comment: nil) }

      /// en translation: Playlists load error
      ///
      /// Key: homeLoadError
      ///
      /// Locales: en, ru
      var homeLoadError: RswiftResources.StringResource { .init(key: "homeLoadError", tableName: "Localizable", source: source, developmentValue: "Playlists load error", comment: nil) }

      /// en translation: Generated playlists
      ///
      /// Key: homePlaylistSet
      ///
      /// Locales: en, ru
      var homePlaylistSet: RswiftResources.StringResource { .init(key: "homePlaylistSet", tableName: "Localizable", source: source, developmentValue: "Generated playlists", comment: nil) }

      /// en translation: Dislike
      ///
      /// Key: itemContextDislike
      ///
      /// Locales: en, ru
      var itemContextDislike: RswiftResources.StringResource { .init(key: "itemContextDislike", tableName: "Localizable", source: source, developmentValue: "Dislike", comment: nil) }

      /// en translation: Like
      ///
      /// Key: itemContextLike
      ///
      /// Locales: en, ru
      var itemContextLike: RswiftResources.StringResource { .init(key: "itemContextLike", tableName: "Localizable", source: source, developmentValue: "Like", comment: nil) }

      /// en translation: Remove 'Dislike'
      ///
      /// Key: itemContextRemoveDislike
      ///
      /// Locales: en, ru
      var itemContextRemoveDislike: RswiftResources.StringResource { .init(key: "itemContextRemoveDislike", tableName: "Localizable", source: source, developmentValue: "Remove 'Dislike'", comment: nil) }

      /// en translation: Remove 'Like'
      ///
      /// Key: itemContextRemoveLike
      ///
      /// Locales: en, ru
      var itemContextRemoveLike: RswiftResources.StringResource { .init(key: "itemContextRemoveLike", tableName: "Localizable", source: source, developmentValue: "Remove 'Like'", comment: nil) }

      /// en translation: Share
      ///
      /// Key: itemContextShare
      ///
      /// Locales: en, ru
      var itemContextShare: RswiftResources.StringResource { .init(key: "itemContextShare", tableName: "Localizable", source: source, developmentValue: "Share", comment: nil) }

      /// en translation: Not playing
      ///
      /// Key: playerNotPlaying
      ///
      /// Locales: en, ru
      var playerNotPlaying: RswiftResources.StringResource { .init(key: "playerNotPlaying", tableName: "Localizable", source: source, developmentValue: "Not playing", comment: nil) }

      /// en translation: Unknown artist
      ///
      /// Key: playerUnknownArtist
      ///
      /// Locales: en, ru
      var playerUnknownArtist: RswiftResources.StringResource { .init(key: "playerUnknownArtist", tableName: "Localizable", source: source, developmentValue: "Unknown artist", comment: nil) }

      /// en translation: No name
      ///
      /// Key: playerUnknownTrackTitle
      ///
      /// Locales: en, ru
      var playerUnknownTrackTitle: RswiftResources.StringResource { .init(key: "playerUnknownTrackTitle", tableName: "Localizable", source: source, developmentValue: "No name", comment: nil) }

      /// en translation: No tracks
      ///
      /// Key: playlistNoTracks
      ///
      /// Locales: en, ru
      var playlistNoTracks: RswiftResources.StringResource { .init(key: "playlistNoTracks", tableName: "Localizable", source: source, developmentValue: "No tracks", comment: nil) }

      /// en translation: Playlist tracks info load error
      ///
      /// Key: playlistTracksLoadError
      ///
      /// Locales: en, ru
      var playlistTracksLoadError: RswiftResources.StringResource { .init(key: "playlistTracksLoadError", tableName: "Localizable", source: source, developmentValue: "Playlist tracks info load error", comment: nil) }

      /// en translation: Birthdate
      ///
      /// Key: profileBirthdate
      ///
      /// Locales: en, ru
      var profileBirthdate: RswiftResources.StringResource { .init(key: "profileBirthdate", tableName: "Localizable", source: source, developmentValue: "Birthdate", comment: nil) }

      /// en translation: Country
      ///
      /// Key: profileCountry
      ///
      /// Locales: en, ru
      var profileCountry: RswiftResources.StringResource { .init(key: "profileCountry", tableName: "Localizable", source: source, developmentValue: "Country", comment: nil) }

      /// en translation: Subscription plan
      ///
      /// Key: profileSubscriptionPlan
      ///
      /// Locales: en, ru
      var profileSubscriptionPlan: RswiftResources.StringResource { .init(key: "profileSubscriptionPlan", tableName: "Localizable", source: source, developmentValue: "Subscription plan", comment: nil) }

      /// en translation: If enabled, each track will be loaded in the lowest possible quality
      ///
      /// Key: profileTrafficEconomySubtitle
      ///
      /// Locales: en, ru
      var profileTrafficEconomySubtitle: RswiftResources.StringResource { .init(key: "profileTrafficEconomySubtitle", tableName: "Localizable", source: source, developmentValue: "If enabled, each track will be loaded in the lowest possible quality", comment: nil) }

      /// en translation: Traffic economy
      ///
      /// Key: profileTrafficEconomyTitle
      ///
      /// Locales: en, ru
      var profileTrafficEconomyTitle: RswiftResources.StringResource { .init(key: "profileTrafficEconomyTitle", tableName: "Localizable", source: source, developmentValue: "Traffic economy", comment: nil) }

      /// en translation: Search suggestions load error
      ///
      /// Key: searchLoadError
      ///
      /// Locales: en, ru
      var searchLoadError: RswiftResources.StringResource { .init(key: "searchLoadError", tableName: "Localizable", source: source, developmentValue: "Search suggestions load error", comment: nil) }

      /// en translation: Search
      ///
      /// Key: searchQueryHint
      ///
      /// Locales: en, ru
      var searchQueryHint: RswiftResources.StringResource { .init(key: "searchQueryHint", tableName: "Localizable", source: source, developmentValue: "Search", comment: nil) }

      /// en translation: Favourite
      ///
      /// Key: tabFav
      ///
      /// Locales: en, ru
      var tabFav: RswiftResources.StringResource { .init(key: "tabFav", tableName: "Localizable", source: source, developmentValue: "Favourite", comment: nil) }

      /// en translation: Home
      ///
      /// Key: tabHome
      ///
      /// Locales: en, ru
      var tabHome: RswiftResources.StringResource { .init(key: "tabHome", tableName: "Localizable", source: source, developmentValue: "Home", comment: nil) }

      /// en translation: Search
      ///
      /// Key: tabSearch
      ///
      /// Locales: en, ru
      var tabSearch: RswiftResources.StringResource { .init(key: "tabSearch", tableName: "Localizable", source: source, developmentValue: "Search", comment: nil) }

      /// en translation: Album name
      ///
      /// Key: trackInfoAlbumName
      ///
      /// Locales: en, ru
      var trackInfoAlbumName: RswiftResources.StringResource { .init(key: "trackInfoAlbumName", tableName: "Localizable", source: source, developmentValue: "Album name", comment: nil) }

      /// en translation: Artists
      ///
      /// Key: trackInfoArtists
      ///
      /// Locales: en, ru
      var trackInfoArtists: RswiftResources.StringResource { .init(key: "trackInfoArtists", tableName: "Localizable", source: source, developmentValue: "Artists", comment: nil) }

      /// en translation: Duration
      ///
      /// Key: trackInfoDuration
      ///
      /// Locales: en, ru
      var trackInfoDuration: RswiftResources.StringResource { .init(key: "trackInfoDuration", tableName: "Localizable", source: source, developmentValue: "Duration", comment: nil) }

      /// en translation: Release Year
      ///
      /// Key: trackInfoReleaseYear
      ///
      /// Locales: en, ru
      var trackInfoReleaseYear: RswiftResources.StringResource { .init(key: "trackInfoReleaseYear", tableName: "Localizable", source: source, developmentValue: "Release Year", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 10 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `Accent`.
    var accent: RswiftResources.ColorResource { .init(name: "Accent", path: [], bundle: bundle) }

    /// Color `Attention`.
    var attention: RswiftResources.ColorResource { .init(name: "Attention", path: [], bundle: bundle) }

    /// Color `BgPrimary`.
    var bgPrimary: RswiftResources.ColorResource { .init(name: "BgPrimary", path: [], bundle: bundle) }

    /// Color `BgSecondary`.
    var bgSecondary: RswiftResources.ColorResource { .init(name: "BgSecondary", path: [], bundle: bundle) }

    /// Color `BgTertiary`.
    var bgTertiary: RswiftResources.ColorResource { .init(name: "BgTertiary", path: [], bundle: bundle) }

    /// Color `Error`.
    var error: RswiftResources.ColorResource { .init(name: "Error", path: [], bundle: bundle) }

    /// Color `Positive`.
    var positive: RswiftResources.ColorResource { .init(name: "Positive", path: [], bundle: bundle) }

    /// Color `Primary`.
    var primary: RswiftResources.ColorResource { .init(name: "Primary", path: [], bundle: bundle) }

    /// Color `Secondary`.
    var secondary: RswiftResources.ColorResource { .init(name: "Secondary", path: [], bundle: bundle) }

    /// Color `Tertiary`.
    var tertiary: RswiftResources.ColorResource { .init(name: "Tertiary", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 31 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `AppIconRounded`.
    var appIconRounded: RswiftResources.ImageResource { .init(name: "AppIconRounded", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Cover`.
    var cover: RswiftResources.ImageResource { .init(name: "Cover", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `Ic3DotsV`.
    var ic3DotsV: RswiftResources.ImageResource { .init(name: "Ic3DotsV", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcAlertCircle`.
    var icAlertCircle: RswiftResources.ImageResource { .init(name: "IcAlertCircle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcAudio`.
    var icAudio: RswiftResources.ImageResource { .init(name: "IcAudio", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcChevronRight`.
    var icChevronRight: RswiftResources.ImageResource { .init(name: "IcChevronRight", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcClose`.
    var icClose: RswiftResources.ImageResource { .init(name: "IcClose", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcEye`.
    var icEye: RswiftResources.ImageResource { .init(name: "IcEye", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcEyeOff`.
    var icEyeOff: RswiftResources.ImageResource { .init(name: "IcEyeOff", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcFastForward`.
    var icFastForward: RswiftResources.ImageResource { .init(name: "IcFastForward", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcFastRewind`.
    var icFastRewind: RswiftResources.ImageResource { .init(name: "IcFastRewind", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcHeart`.
    var icHeart: RswiftResources.ImageResource { .init(name: "IcHeart", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcHeartFill`.
    var icHeartFill: RswiftResources.ImageResource { .init(name: "IcHeartFill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcHeartOff`.
    var icHeartOff: RswiftResources.ImageResource { .init(name: "IcHeartOff", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcHeartOffFill`.
    var icHeartOffFill: RswiftResources.ImageResource { .init(name: "IcHeartOffFill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcInfo`.
    var icInfo: RswiftResources.ImageResource { .init(name: "IcInfo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcLogout`.
    var icLogout: RswiftResources.ImageResource { .init(name: "IcLogout", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcMusic`.
    var icMusic: RswiftResources.ImageResource { .init(name: "IcMusic", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcPause`.
    var icPause: RswiftResources.ImageResource { .init(name: "IcPause", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcPlay`.
    var icPlay: RswiftResources.ImageResource { .init(name: "IcPlay", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcPlaylist`.
    var icPlaylist: RswiftResources.ImageResource { .init(name: "IcPlaylist", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcProfile`.
    var icProfile: RswiftResources.ImageResource { .init(name: "IcProfile", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcRadar`.
    var icRadar: RswiftResources.ImageResource { .init(name: "IcRadar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcRepeat`.
    var icRepeat: RswiftResources.ImageResource { .init(name: "IcRepeat", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcRepeatFill`.
    var icRepeatFill: RswiftResources.ImageResource { .init(name: "IcRepeatFill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcRepeatOneFill`.
    var icRepeatOneFill: RswiftResources.ImageResource { .init(name: "IcRepeatOneFill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcSearch`.
    var icSearch: RswiftResources.ImageResource { .init(name: "IcSearch", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcShare`.
    var icShare: RswiftResources.ImageResource { .init(name: "IcShare", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcShuffle`.
    var icShuffle: RswiftResources.ImageResource { .init(name: "IcShuffle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IcShuffleFill`.
    var icShuffleFill: RswiftResources.ImageResource { .init(name: "IcShuffleFill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PreviewCover`.
    var previewCover: RswiftResources.ImageResource { .init(name: "PreviewCover", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }
}